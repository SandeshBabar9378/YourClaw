---
import Layout from "../layouts/Layout.astro";
const response = await fetch(`https://backend.yourclaw.tech/api/adoption-requests`);
const petData = await response.json();
---

<Layout>
  <div class="relative top-[-5vh] md:static">
    <!--start div for spacing -->
    <div class="md:h-40 h-24"></div>
    <!--main -->
    <div class="flex flex-col md:w-[100%] h-[100%] bg-white p-3">
      <!--Upper Panel -->
      <div
        class="flex justify-between item-center h-20 md:h-10 w-[90%] ml-[5%]"
      >
        <div class="relative -top-20">
          <h1 class="text-5xl font-extrabold text-slate-800">
            Adoption Requests
          </h1>
        </div>
        <div>
          <div class="relative -top-12 md:-top-24">
            <button
              type="button"
              class="ml-2 text-black hover:text-blackish"
              onclick="toggleDropdown()"
            >
              <i
                id="dropdownIcon"
                class="fa-solid fa-gear fa-2xl transition-transform duration-300"
              ></i>
            </button>
            <div
              id="dropdown"
              class="absolute right-0 mt-2 w-48 bg-white border rounded shadow-lg hidden"
            >
              <a
              href="/donor-list"
              class="block px-4 py-1 text-gray-800 hover:bg-gray-100"
              >Donor List</a
              >
              <a
                href="/forget-pass"
                class="block px-4 py-1 text-gray-800 hover:bg-gray-100"
                >Reset Password</a
              >
              <a
                id="logoutBtn"
                class="block px-4 py-1 text-gray-800 hover:bg-gray-100 cursor-pointer"
                >Log Out &#160; <i class="fa-solid fa-right-from-bracket"
                ></i></a
              >
            </div>
          </div>
        </div>
      </div>
      <!--box -->
      <div class="w-[100%] h-[90vh] md:h-[100vh] bg-white p-3">
        <div
          class="relative flex flex-col ml-[2.5%] w-[95%] h-[90%] overflow-y-scroll text-gray-700 bg-white shadow-lg border rounded-lg"
        >
          <table class="w-full text-left table-auto min-w-max">
            <thead class="sticky top-0">
              <tr class="border-b border bg-slate-200">
                <th
                  class="p-5 w-24 text-xl font-semibold leading-none text-slate-500"
                  >Dog
                </th>
                <th
                  class="p-5 w-32 text-xl font-semibold leading-none text-slate-500"
                  >Name</th
                >
                <th
                  class="py-5 w-24 text-xl font-semibold leading-none text-slate-500"
                  >Breed</th
                >
                <th
                  class="p-5 w-24 text-xl font-semibold leading-none text-slate-500"
                  >Price</th
                >
                <th
                  class="p-5 w-24 text-xl font-semibold leading-none text-slate-500"
                  >Color</th
                >
                <th
                  class="py-5 px-3 w-24 text-xl font-semibold leading-none text-slate-500"
                  >Age</th
                >
                <th
                  class="py-5 px-5 w-24 text-xl text-center font-semibold leading-none text-slate-500"
                  >Status</th
                >
                <th
                  class="p-5 w-24 text-xl font-semibold leading-none text-slate-500"
                  >Owner
                </th>
                <th
                  class="p-5 w-24 text-xl font-semibold leading-none text-slate-500"
                  >Adopter
                </th>
                <th
                  class="py-5 px-3 w-24 text-xl text-center font-semibold leading-none text-slate-500"
                  >Approve
                </th>
                <th
                  class="py-5 px-3 w-24 text-xl text-center font-semibold leading-none text-slate-500"
                  >Reject</th
                >
              </tr>
            </thead>
            <tbody>
              {
                petData.docs && petData.docs.length > 0 ? (
                  petData.docs.map((item) => (
                    <tr class="hover:bg-slate-50">
                      <td class="p-4 border-b border-slate-200 py-5">
                        <img
                          src={item.petId.pet_image}
                          alt={item.petId.pet_name}
                          class="w-16 h-16 object-cover rounded"
                        />
                      </td>
                      <td class="p-4 border-b border-slate-200 py-5">
                        <a
                          href={`/pets/${item.petId.id}`}
                          class="block font-medium text-base text-slate-800"
                        >
                          {item.petId.pet_name}
                        </a>
                      </td>
                      <!--Price added here -->
                      <td class=" border-b border-slate-200 ">
                        <p class=" text-sm text-slate-500">
                          {item.petId.pet_breed}
                        </p>
                      </td>
                      <td class=" border-b border-slate-200 ">
                        <p class=" text-sm text-slate-500">
                          {item.petId.pet_price}
                        </p>
                      </td>
                      <td class="p-4 border-b border-slate-200 py-5">
                        <p class="text-sm text-slate-500">
                          {item.petId.pet_color}
                        </p>
                      </td>
                      <td class="p-4 border-b border-slate-200 py-5">
                        <p class="text-sm text-slate-500">
                          {item.petId.pet_age}
                        </p>
                      </td>
                      <td class="p-4 border-b border-slate-200 py-5 ">
                        <p
                          class={`text-sm text-slate-600 text-center rounded-full p-1 ${
                            item.status?.toLowerCase() === "pending"
                              ? "bg-yellow-100"
                              : item.status?.toLowerCase() === "approved"
                                ? "bg-green-100"
                                : " bg-red-100"
                          }`}
                        >
                          {item.status.charAt(0).toUpperCase() +
                            item.status.slice(1)}
                        </p>
                      </td>
                      <td class="p-4 border-b border-slate-200 py-5">
                        <p class="block ml-5 font-medium text-base text-slate-800">
                          {item.petId.owner?.name || "owner"}
                        </p>
                      </td>
                      <td class="p-4 border-b border-slate-200 py-5">
                        <p class="block font-medium text-base text-slate-800">
                          {item.adoptedBy.name}
                        </p>
                      </td>
                      <td class="p-4 border-b border-slate-200 py-5 text-center">
                        <button
                          type="button"
                          data-id={item.id}
                          class="btn-approve text-white rounded-md px-3 py-2 bg-green-500 border-2 hover:bg-green-600 hover:shadow-lg"
                        >
                          Approve
                        </button>
                      </td>
                      <td class="p-4 border-b border-slate-200 py-5 text-center">
                        <button
                          type="button"
                          data-id={item.id}
                          class="btn-reject text-white rounded-md px-3 py-2 bg-red-400 border-2 hover:bg-red-500 hover:shadow-lg"
                        >
                          Reject
                        </button>
                      </td>
                    </tr>
                  ))
                ) : (
                  <tr class="hover:bg-slate-50">
                    <td
                      class="p-4 border-b border-slate-200 py-5 text-center text-slate-500 "
                      colspan="12"
                    >
                      You have'nt added any pets yet !
                    </td>
                  </tr>
                )
              }
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</Layout>
<script is:inline>
  function toggleDropdown() {
    const dropdown = document.getElementById("dropdown");
    const dropdownIcon = document.getElementById("dropdownIcon");
    dropdown.classList.toggle("hidden");
    dropdownIcon.classList.toggle("rotate-90");
  }

  const logoutBtn = document.getElementById("logoutBtn");
  logoutBtn.addEventListener("click", function () {
    showLoader();
    document.cookie =
      "payload-token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
    hideLoader();
    customAlert("Logged out successfully\nThank you for visiting us");
    setTimeout(() => {
      location.href = "/";
    }, 1500);
  });
</script>
<script is:inline>
  async function updateStatus(requestId, status) {
    showLoader();
    try {
      const response = await fetch(
        `https://backend.yourclaw.tech/api/adoption-requests/${requestId}`,
        {
          method: "PATCH",
          headers: {
            "Content-Type": "application/json",
            // Authorization: "Bearer ADMIN_TOKEN",/
          },
          body: JSON.stringify({ status }),
        },
      );
      const data = await response.json();
      console.log(data);
      if (!response.ok) {
        hideLoader();
        customAlert(`Request ${status}!`);
        throw new Error("Failed to update request status");
      } else {
        hideLoader();
        customAlert(`Request ${status}!`);
      }
    } catch (error) {
      hideLoader();
      customAlert(`Request ${status}!`);
      console.error("Error updating request status:", error);
    }
  }

  document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".btn-approve").forEach((button) => {
      button.addEventListener("click", function () {
        const petId = this.getAttribute("data-id");
        updateStatus(petId, "approved");
        setTimeout(() => {
          window.location.reload();
        }, 2500);
      });
    });

    document.querySelectorAll(".btn-reject").forEach((button) => {
      button.addEventListener("click", function () {
        const petId = this.getAttribute("data-id");
        updateStatus(petId, "rejected");
        setTimeout(() => {
          window.location.reload();
        }, 2500);
      });
    });
  });
</script>
